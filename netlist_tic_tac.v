/* Generated by Yosys 0.9 (git sha1 1979e0b) */

module fsm_controller(clock, reset, play, pc, illegal_TRIAL, no_space, win, computer_play, player_poslay);
  wire _00_;
  wire [1:0] _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  input clock;
  output computer_play;
  wire [1:0] current_state;
  input illegal_TRIAL;
  wire [1:0] next_state;
  input no_space;
  input pc;
  input play;
  output player_poslay;
  input reset;
  input win;
  sky130_fd_sc_hd__or2_0 _40_ (
    .A(_34_),
    .B(_29_),
    .X(_22_)
  );
  sky130_fd_sc_hd__nand2b_1 _41_ (
    .A_N(_19_),
    .B(_20_),
    .Y(_23_)
  );
  sky130_fd_sc_hd__and3b_1 _42_ (
    .A_N(_19_),
    .B(_30_),
    .C(_20_),
    .X(_15_)
  );
  sky130_fd_sc_hd__nor2b_1 _43_ (
    .A(_20_),
    .B_N(_19_),
    .Y(_32_)
  );
  sky130_fd_sc_hd__o21bai_1 _44_ (
    .A1(_31_),
    .A2(_20_),
    .B1_N(_33_),
    .Y(_24_)
  );
  sky130_fd_sc_hd__xor2_1 _45_ (
    .A(_20_),
    .B(_19_),
    .X(_25_)
  );
  sky130_fd_sc_hd__o2bb2ai_1 _46_ (
    .A1_N(_22_),
    .A2_N(_15_),
    .B1(_24_),
    .B2(_25_),
    .Y(_16_)
  );
  sky130_fd_sc_hd__nor3b_1 _47_ (
    .A(_34_),
    .B(_29_),
    .C_N(_30_),
    .Y(_26_)
  );
  sky130_fd_sc_hd__or3b_1 _48_ (
    .A(_20_),
    .B(_21_),
    .C_N(_19_),
    .X(_27_)
  );
  sky130_fd_sc_hd__nand3b_1 _49_ (
    .A_N(_33_),
    .B(_20_),
    .C(_19_),
    .Y(_28_)
  );
  sky130_fd_sc_hd__o211ai_1 _50_ (
    .A1(_23_),
    .A2(_26_),
    .B1(_27_),
    .C1(_28_),
    .Y(_17_)
  );
  sky130_fd_sc_hd__clkinv_1 _51_ (
    .A(_37_),
    .Y(_36_)
  );
  sky130_fd_sc_hd__clkinv_1 _52_ (
    .A(_37_),
    .Y(_35_)
  );
  sky130_fd_sc_hd__dfrtp_1 _53_ (
    .CLK(clock),
    .D(next_state[0]),
    .Q(current_state[0]),
    .RESET_B(_38_)
  );
  sky130_fd_sc_hd__dfrtp_1 _54_ (
    .CLK(clock),
    .D(next_state[1]),
    .Q(current_state[1]),
    .RESET_B(_39_)
  );
 sky130_fd_sc_hd__udp_dlatch$lP _01_(
    .D(_00_),
    
    .Q(computer_play)
  );
 sky130_fd_sc_hd__udp_dlatch$lP _02_(
    .D(_01_[0]),
  
    .Q(next_state[0])
  );
 sky130_fd_sc_hd__udp_dlatch$lP _03_(
    .D(_01_[1]),
    
    .Q(next_state[1])
  );
  assign _18_ = 1'h1;
  assign _31_ = play;
  assign _33_ = reset;
  assign _20_ = current_state[1];
  assign _19_ = current_state[0];
  assign _34_ = win;
  assign _29_ = no_space;
  assign _30_ = pc;
  assign _01_[0] = _16_;
  assign _21_ = illegal_TRIAL;
  assign _01_[1] = _17_;
  assign player_poslay = _32_;
  assign _02_ = _18_;
  assign _00_ = _15_;
  assign _37_ = reset;
  assign _39_ = _36_;
  assign _38_ = _35_;
endmodule

module illegal_TRIAL_detector(p1, p2, p3, p4, p5, p6, p7, p8, p9, PS, PLS, illegal_TRIAL);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  input [8:0] PLS;
  input [8:0] PS;
  output illegal_TRIAL;
  input [1:0] p1;
  input [1:0] p2;
  input [1:0] p3;
  input [1:0] p4;
  input [1:0] p5;
  input [1:0] p6;
  input [1:0] p7;
  input [1:0] p8;
  input [1:0] p9;
  sky130_fd_sc_hd__o21ai_0 _085_ (
    .A1(_071_),
    .A2(_072_),
    .B1(_044_),
    .Y(_052_)
  );
  sky130_fd_sc_hd__o22ai_1 _086_ (
    .A1(_079_),
    .A2(_080_),
    .B1(_039_),
    .B2(_048_),
    .Y(_053_)
  );
  sky130_fd_sc_hd__o21ai_0 _087_ (
    .A1(_069_),
    .A2(_070_),
    .B1(_043_),
    .Y(_054_)
  );
  sky130_fd_sc_hd__o22ai_1 _088_ (
    .A1(_073_),
    .A2(_074_),
    .B1(_036_),
    .B2(_045_),
    .Y(_055_)
  );
  sky130_fd_sc_hd__nand4_1 _089_ (
    .A(_052_),
    .B(_053_),
    .C(_054_),
    .D(_055_),
    .Y(_056_)
  );
  sky130_fd_sc_hd__o21ai_0 _090_ (
    .A1(_069_),
    .A2(_070_),
    .B1(_034_),
    .Y(_057_)
  );
  sky130_fd_sc_hd__o21ai_0 _091_ (
    .A1(_077_),
    .A2(_078_),
    .B1(_038_),
    .Y(_058_)
  );
  sky130_fd_sc_hd__o21ai_0 _092_ (
    .A1(_071_),
    .A2(_072_),
    .B1(_035_),
    .Y(_059_)
  );
  sky130_fd_sc_hd__o22ai_1 _093_ (
    .A1(_067_),
    .A2(_068_),
    .B1(_033_),
    .B2(_042_),
    .Y(_060_)
  );
  sky130_fd_sc_hd__nand4_1 _094_ (
    .A(_057_),
    .B(_058_),
    .C(_059_),
    .D(_060_),
    .Y(_061_)
  );
  sky130_fd_sc_hd__o22ai_1 _095_ (
    .A1(_075_),
    .A2(_076_),
    .B1(_037_),
    .B2(_046_),
    .Y(_062_)
  );
  sky130_fd_sc_hd__o22ai_1 _096_ (
    .A1(_083_),
    .A2(_084_),
    .B1(_041_),
    .B2(_050_),
    .Y(_063_)
  );
  sky130_fd_sc_hd__o22ai_1 _097_ (
    .A1(_081_),
    .A2(_082_),
    .B1(_040_),
    .B2(_049_),
    .Y(_064_)
  );
  sky130_fd_sc_hd__o21ai_0 _098_ (
    .A1(_077_),
    .A2(_078_),
    .B1(_047_),
    .Y(_065_)
  );
  sky130_fd_sc_hd__nand4_1 _099_ (
    .A(_062_),
    .B(_063_),
    .C(_064_),
    .D(_065_),
    .Y(_066_)
  );
  sky130_fd_sc_hd__or3_1 _100_ (
    .A(_056_),
    .B(_061_),
    .C(_066_),
    .X(_051_)
  );
  assign _067_ = p1[0];
  assign _068_ = p1[1];
  assign _069_ = p2[0];
  assign _070_ = p2[1];
  assign _034_ = PLS[1];
  assign _033_ = PLS[0];
  assign _071_ = p3[0];
  assign _072_ = p3[1];
  assign _035_ = PLS[2];
  assign _073_ = p4[0];
  assign _074_ = p4[1];
  assign _036_ = PLS[3];
  assign _075_ = p5[0];
  assign _076_ = p5[1];
  assign _037_ = PLS[4];
  assign _077_ = p6[0];
  assign _078_ = p6[1];
  assign _038_ = PLS[5];
  assign _079_ = p7[0];
  assign _080_ = p7[1];
  assign _039_ = PLS[6];
  assign _081_ = p8[0];
  assign _082_ = p8[1];
  assign _040_ = PLS[7];
  assign _083_ = p9[0];
  assign _084_ = p9[1];
  assign _041_ = PLS[8];
  assign _043_ = PS[1];
  assign _042_ = PS[0];
  assign _044_ = PS[2];
  assign _045_ = PS[3];
  assign _046_ = PS[4];
  assign _047_ = PS[5];
  assign _048_ = PS[6];
  assign _049_ = PS[7];
  assign _050_ = PS[8];
  assign illegal_TRIAL = _051_;
endmodule

module nospace_detector(p1, p2, p3, p4, p5, p6, p7, p8, p9, no_space);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  output no_space;
  input [1:0] p1;
  input [1:0] p2;
  input [1:0] p3;
  input [1:0] p4;
  input [1:0] p5;
  input [1:0] p6;
  input [1:0] p7;
  input [1:0] p8;
  input [1:0] p9;
  sky130_fd_sc_hd__nor2_1 _36_ (
    .A(_30_),
    .B(_31_),
    .Y(_11_)
  );
  sky130_fd_sc_hd__o22ai_1 _37_ (
    .A1(_24_),
    .A2(_25_),
    .B1(_28_),
    .B2(_29_),
    .Y(_12_)
  );
  sky130_fd_sc_hd__o22ai_1 _38_ (
    .A1(_20_),
    .A2(_21_),
    .B1(_22_),
    .B2(_23_),
    .Y(_13_)
  );
  sky130_fd_sc_hd__o22ai_1 _39_ (
    .A1(_26_),
    .A2(_27_),
    .B1(_34_),
    .B2(_35_),
    .Y(_14_)
  );
  sky130_fd_sc_hd__o22ai_1 _40_ (
    .A1(_18_),
    .A2(_19_),
    .B1(_32_),
    .B2(_33_),
    .Y(_15_)
  );
  sky130_fd_sc_hd__or4_1 _41_ (
    .A(_11_),
    .B(_12_),
    .C(_13_),
    .D(_15_),
    .X(_16_)
  );
  sky130_fd_sc_hd__nor2_1 _42_ (
    .A(_14_),
    .B(_16_),
    .Y(_17_)
  );
  assign _20_ = p2[0];
  assign _21_ = p2[1];
  assign _18_ = p1[0];
  assign _19_ = p1[1];
  assign _22_ = p3[0];
  assign _23_ = p3[1];
  assign _24_ = p4[0];
  assign _25_ = p4[1];
  assign _26_ = p5[0];
  assign _27_ = p5[1];
  assign _28_ = p6[0];
  assign _29_ = p6[1];
  assign _30_ = p7[0];
  assign _31_ = p7[1];
  assign _32_ = p8[0];
  assign _33_ = p8[1];
  assign _34_ = p9[0];
  assign _35_ = p9[1];
  assign no_space = _17_;
endmodule

module pition_decoder(in, enable, out_en);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  input enable;
  input [3:0] in;
  output [15:0] out_en;
  sky130_fd_sc_hd__or3b_1 _083_ (
    .A(_057_),
    .B(_056_),
    .C_N(_053_),
    .X(_058_)
  );
  sky130_fd_sc_hd__nor3_1 _084_ (
    .A(_055_),
    .B(_054_),
    .C(_058_),
    .Y(_067_)
  );
  sky130_fd_sc_hd__nor3b_1 _085_ (
    .A(_058_),
    .B(_055_),
    .C_N(_054_),
    .Y(_074_)
  );
  sky130_fd_sc_hd__nor3b_1 _086_ (
    .A(_054_),
    .B(_058_),
    .C_N(_055_),
    .Y(_075_)
  );
  sky130_fd_sc_hd__nand2_1 _087_ (
    .A(_055_),
    .B(_054_),
    .Y(_059_)
  );
  sky130_fd_sc_hd__nor2_1 _088_ (
    .A(_058_),
    .B(_059_),
    .Y(_076_)
  );
  sky130_fd_sc_hd__nand2b_1 _089_ (
    .A_N(_057_),
    .B(_056_),
    .Y(_060_)
  );
  sky130_fd_sc_hd__or3b_1 _090_ (
    .A(_055_),
    .B(_054_),
    .C_N(_053_),
    .X(_061_)
  );
  sky130_fd_sc_hd__nor2_1 _091_ (
    .A(_060_),
    .B(_061_),
    .Y(_077_)
  );
  sky130_fd_sc_hd__nand3b_1 _092_ (
    .A_N(_055_),
    .B(_054_),
    .C(_053_),
    .Y(_062_)
  );
  sky130_fd_sc_hd__nor2_1 _093_ (
    .A(_060_),
    .B(_062_),
    .Y(_078_)
  );
  sky130_fd_sc_hd__nand3b_1 _094_ (
    .A_N(_054_),
    .B(_053_),
    .C(_055_),
    .Y(_063_)
  );
  sky130_fd_sc_hd__nor2_1 _095_ (
    .A(_060_),
    .B(_063_),
    .Y(_079_)
  );
  sky130_fd_sc_hd__nand3_1 _096_ (
    .A(_055_),
    .B(_054_),
    .C(_053_),
    .Y(_064_)
  );
  sky130_fd_sc_hd__nor2_1 _097_ (
    .A(_060_),
    .B(_064_),
    .Y(_080_)
  );
  sky130_fd_sc_hd__nand2b_1 _098_ (
    .A_N(_056_),
    .B(_057_),
    .Y(_065_)
  );
  sky130_fd_sc_hd__nor2_1 _099_ (
    .A(_061_),
    .B(_065_),
    .Y(_081_)
  );
  sky130_fd_sc_hd__nor2_1 _100_ (
    .A(_062_),
    .B(_065_),
    .Y(_082_)
  );
  sky130_fd_sc_hd__nor2_1 _101_ (
    .A(_063_),
    .B(_065_),
    .Y(_068_)
  );
  sky130_fd_sc_hd__nor2_1 _102_ (
    .A(_064_),
    .B(_065_),
    .Y(_069_)
  );
  sky130_fd_sc_hd__nand2_1 _103_ (
    .A(_057_),
    .B(_056_),
    .Y(_066_)
  );
  sky130_fd_sc_hd__nor2_1 _104_ (
    .A(_061_),
    .B(_066_),
    .Y(_070_)
  );
  sky130_fd_sc_hd__nor2_1 _105_ (
    .A(_062_),
    .B(_066_),
    .Y(_071_)
  );
  sky130_fd_sc_hd__nor2_1 _106_ (
    .A(_063_),
    .B(_066_),
    .Y(_072_)
  );
  sky130_fd_sc_hd__nor2_1 _107_ (
    .A(_064_),
    .B(_066_),
    .Y(_073_)
  );
  assign _055_ = in[1];
  assign _054_ = in[0];
  assign _057_ = in[3];
  assign _056_ = in[2];
  assign _053_ = enable;
  assign out_en[0] = _067_;
  assign out_en[1] = _074_;
  assign out_en[2] = _075_;
  assign out_en[3] = _076_;
  assign out_en[4] = _077_;
  assign out_en[5] = _078_;
  assign out_en[6] = _079_;
  assign out_en[7] = _080_;
  assign out_en[8] = _081_;
  assign out_en[9] = _082_;
  assign out_en[10] = _068_;
  assign out_en[11] = _069_;
  assign out_en[12] = _070_;
  assign out_en[13] = _071_;
  assign out_en[14] = _072_;
  assign out_en[15] = _073_;
endmodule

module pition_registers(clock, reset, illegal_TRIAL, PS, PLS, p1, p2, p3, p4, p5, p6, p7, p8, p9);
  wire [1:0] _000_;
  wire [1:0] _001_;
  wire [1:0] _002_;
  wire [1:0] _003_;
  wire [1:0] _004_;
  wire [1:0] _005_;
  wire [1:0] _006_;
  wire [1:0] _007_;
  wire [1:0] _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  input [8:0] PLS;
  input [8:0] PS;
  input clock;
  input illegal_TRIAL;
  output [1:0] p1;
  output [1:0] p2;
  output [1:0] p3;
  output [1:0] p4;
  output [1:0] p5;
  output [1:0] p6;
  output [1:0] p7;
  output [1:0] p8;
  output [1:0] p9;
  input reset;
  sky130_fd_sc_hd__clkinv_1 _156_ (
    .A(_081_),
    .Y(_082_)
  );
  sky130_fd_sc_hd__clkinv_1 _157_ (
    .A(_118_),
    .Y(_083_)
  );
  sky130_fd_sc_hd__clkinv_1 _158_ (
    .A(_116_),
    .Y(_084_)
  );
  sky130_fd_sc_hd__clkinv_1 _159_ (
    .A(_114_),
    .Y(_085_)
  );
  sky130_fd_sc_hd__clkinv_1 _160_ (
    .A(_112_),
    .Y(_086_)
  );
  sky130_fd_sc_hd__clkinv_1 _161_ (
    .A(_110_),
    .Y(_087_)
  );
  sky130_fd_sc_hd__clkinv_1 _162_ (
    .A(_108_),
    .Y(_088_)
  );
  sky130_fd_sc_hd__clkinv_1 _163_ (
    .A(_106_),
    .Y(_089_)
  );
  sky130_fd_sc_hd__clkinv_1 _164_ (
    .A(_104_),
    .Y(_090_)
  );
  sky130_fd_sc_hd__clkinv_1 _165_ (
    .A(_102_),
    .Y(_091_)
  );
  sky130_fd_sc_hd__nor2b_1 _166_ (
    .A(_081_),
    .B_N(_071_),
    .Y(_092_)
  );
  sky130_fd_sc_hd__a2bb2oi_1 _167_ (
    .A1_N(_117_),
    .A2_N(_092_),
    .B1(_082_),
    .B2(_080_),
    .Y(_061_)
  );
  sky130_fd_sc_hd__o2bb2ai_1 _168_ (
    .A1_N(_080_),
    .A2_N(_082_),
    .B1(_083_),
    .B2(_092_),
    .Y(_062_)
  );
  sky130_fd_sc_hd__nor2b_1 _169_ (
    .A(_081_),
    .B_N(_070_),
    .Y(_093_)
  );
  sky130_fd_sc_hd__a2bb2oi_1 _170_ (
    .A1_N(_115_),
    .A2_N(_093_),
    .B1(_079_),
    .B2(_082_),
    .Y(_059_)
  );
  sky130_fd_sc_hd__o2bb2ai_1 _171_ (
    .A1_N(_082_),
    .A2_N(_079_),
    .B1(_084_),
    .B2(_093_),
    .Y(_060_)
  );
  sky130_fd_sc_hd__nor2b_1 _172_ (
    .A(_081_),
    .B_N(_069_),
    .Y(_094_)
  );
  sky130_fd_sc_hd__a2bb2oi_1 _173_ (
    .A1_N(_113_),
    .A2_N(_094_),
    .B1(_078_),
    .B2(_082_),
    .Y(_057_)
  );
  sky130_fd_sc_hd__o2bb2ai_1 _174_ (
    .A1_N(_082_),
    .A2_N(_078_),
    .B1(_085_),
    .B2(_094_),
    .Y(_058_)
  );
  sky130_fd_sc_hd__nor2b_1 _175_ (
    .A(_081_),
    .B_N(_068_),
    .Y(_095_)
  );
  sky130_fd_sc_hd__a2bb2oi_1 _176_ (
    .A1_N(_111_),
    .A2_N(_095_),
    .B1(_077_),
    .B2(_082_),
    .Y(_055_)
  );
  sky130_fd_sc_hd__o2bb2ai_1 _177_ (
    .A1_N(_082_),
    .A2_N(_077_),
    .B1(_086_),
    .B2(_095_),
    .Y(_056_)
  );
  sky130_fd_sc_hd__nor2b_1 _178_ (
    .A(_081_),
    .B_N(_067_),
    .Y(_096_)
  );
  sky130_fd_sc_hd__a2bb2oi_1 _179_ (
    .A1_N(_109_),
    .A2_N(_096_),
    .B1(_076_),
    .B2(_082_),
    .Y(_053_)
  );
  sky130_fd_sc_hd__o2bb2ai_1 _180_ (
    .A1_N(_082_),
    .A2_N(_076_),
    .B1(_087_),
    .B2(_096_),
    .Y(_054_)
  );
  sky130_fd_sc_hd__nor2b_1 _181_ (
    .A(_081_),
    .B_N(_066_),
    .Y(_097_)
  );
  sky130_fd_sc_hd__a2bb2oi_1 _182_ (
    .A1_N(_107_),
    .A2_N(_097_),
    .B1(_075_),
    .B2(_082_),
    .Y(_051_)
  );
  sky130_fd_sc_hd__o2bb2ai_1 _183_ (
    .A1_N(_082_),
    .A2_N(_075_),
    .B1(_088_),
    .B2(_097_),
    .Y(_052_)
  );
  sky130_fd_sc_hd__nor2b_1 _184_ (
    .A(_081_),
    .B_N(_065_),
    .Y(_098_)
  );
  sky130_fd_sc_hd__a2bb2oi_1 _185_ (
    .A1_N(_105_),
    .A2_N(_098_),
    .B1(_074_),
    .B2(_082_),
    .Y(_049_)
  );
  sky130_fd_sc_hd__o2bb2ai_1 _186_ (
    .A1_N(_082_),
    .A2_N(_074_),
    .B1(_089_),
    .B2(_098_),
    .Y(_050_)
  );
  sky130_fd_sc_hd__nor2b_1 _187_ (
    .A(_081_),
    .B_N(_064_),
    .Y(_099_)
  );
  sky130_fd_sc_hd__a2bb2oi_1 _188_ (
    .A1_N(_103_),
    .A2_N(_099_),
    .B1(_073_),
    .B2(_082_),
    .Y(_047_)
  );
  sky130_fd_sc_hd__o2bb2ai_1 _189_ (
    .A1_N(_082_),
    .A2_N(_073_),
    .B1(_090_),
    .B2(_099_),
    .Y(_048_)
  );
  sky130_fd_sc_hd__nor2b_1 _190_ (
    .A(_081_),
    .B_N(_063_),
    .Y(_100_)
  );
  sky130_fd_sc_hd__a2bb2oi_1 _191_ (
    .A1_N(_101_),
    .A2_N(_100_),
    .B1(_072_),
    .B2(_082_),
    .Y(_045_)
  );
  sky130_fd_sc_hd__o2bb2ai_1 _192_ (
    .A1_N(_082_),
    .A2_N(_072_),
    .B1(_091_),
    .B2(_100_),
    .Y(_046_)
  );
  sky130_fd_sc_hd__clkinv_1 _193_ (
    .A(_137_),
    .Y(_136_)
  );
  sky130_fd_sc_hd__clkinv_1 _194_ (
    .A(_137_),
    .Y(_119_)
  );
  sky130_fd_sc_hd__clkinv_1 _195_ (
    .A(_137_),
    .Y(_120_)
  );
  sky130_fd_sc_hd__clkinv_1 _196_ (
    .A(_137_),
    .Y(_121_)
  );
  sky130_fd_sc_hd__clkinv_1 _197_ (
    .A(_137_),
    .Y(_122_)
  );
  sky130_fd_sc_hd__clkinv_1 _198_ (
    .A(_137_),
    .Y(_123_)
  );
  sky130_fd_sc_hd__clkinv_1 _199_ (
    .A(_137_),
    .Y(_124_)
  );
  sky130_fd_sc_hd__clkinv_1 _200_ (
    .A(_137_),
    .Y(_125_)
  );
  sky130_fd_sc_hd__clkinv_1 _201_ (
    .A(_137_),
    .Y(_126_)
  );
  sky130_fd_sc_hd__clkinv_1 _202_ (
    .A(_137_),
    .Y(_127_)
  );
  sky130_fd_sc_hd__clkinv_1 _203_ (
    .A(_137_),
    .Y(_128_)
  );
  sky130_fd_sc_hd__clkinv_1 _204_ (
    .A(_137_),
    .Y(_129_)
  );
  sky130_fd_sc_hd__clkinv_1 _205_ (
    .A(_137_),
    .Y(_130_)
  );
  sky130_fd_sc_hd__clkinv_1 _206_ (
    .A(_137_),
    .Y(_131_)
  );
  sky130_fd_sc_hd__clkinv_1 _207_ (
    .A(_137_),
    .Y(_132_)
  );
  sky130_fd_sc_hd__clkinv_1 _208_ (
    .A(_137_),
    .Y(_133_)
  );
  sky130_fd_sc_hd__clkinv_1 _209_ (
    .A(_137_),
    .Y(_134_)
  );
  sky130_fd_sc_hd__clkinv_1 _210_ (
    .A(_137_),
    .Y(_135_)
  );
  sky130_fd_sc_hd__dfrtp_1 _211_ (
    .CLK(clock),
    .D(_008_[0]),
    .Q(p9[0]),
    .RESET_B(_138_)
  );
  sky130_fd_sc_hd__dfrtp_1 _212_ (
    .CLK(clock),
    .D(_008_[1]),
    .Q(p9[1]),
    .RESET_B(_139_)
  );
  sky130_fd_sc_hd__dfrtp_1 _213_ (
    .CLK(clock),
    .D(_007_[0]),
    .Q(p8[0]),
    .RESET_B(_140_)
  );
  sky130_fd_sc_hd__dfrtp_1 _214_ (
    .CLK(clock),
    .D(_007_[1]),
    .Q(p8[1]),
    .RESET_B(_141_)
  );
  sky130_fd_sc_hd__dfrtp_1 _215_ (
    .CLK(clock),
    .D(_006_[0]),
    .Q(p7[0]),
    .RESET_B(_142_)
  );
  sky130_fd_sc_hd__dfrtp_1 _216_ (
    .CLK(clock),
    .D(_006_[1]),
    .Q(p7[1]),
    .RESET_B(_143_)
  );
  sky130_fd_sc_hd__dfrtp_1 _217_ (
    .CLK(clock),
    .D(_005_[0]),
    .Q(p6[0]),
    .RESET_B(_144_)
  );
  sky130_fd_sc_hd__dfrtp_1 _218_ (
    .CLK(clock),
    .D(_005_[1]),
    .Q(p6[1]),
    .RESET_B(_145_)
  );
  sky130_fd_sc_hd__dfrtp_1 _219_ (
    .CLK(clock),
    .D(_004_[0]),
    .Q(p5[0]),
    .RESET_B(_146_)
  );
  sky130_fd_sc_hd__dfrtp_1 _220_ (
    .CLK(clock),
    .D(_004_[1]),
    .Q(p5[1]),
    .RESET_B(_147_)
  );
  sky130_fd_sc_hd__dfrtp_1 _221_ (
    .CLK(clock),
    .D(_003_[0]),
    .Q(p4[0]),
    .RESET_B(_148_)
  );
  sky130_fd_sc_hd__dfrtp_1 _222_ (
    .CLK(clock),
    .D(_003_[1]),
    .Q(p4[1]),
    .RESET_B(_149_)
  );
  sky130_fd_sc_hd__dfrtp_1 _223_ (
    .CLK(clock),
    .D(_002_[0]),
    .Q(p3[0]),
    .RESET_B(_150_)
  );
  sky130_fd_sc_hd__dfrtp_1 _224_ (
    .CLK(clock),
    .D(_002_[1]),
    .Q(p3[1]),
    .RESET_B(_151_)
  );
  sky130_fd_sc_hd__dfrtp_1 _225_ (
    .CLK(clock),
    .D(_001_[0]),
    .Q(p2[0]),
    .RESET_B(_152_)
  );
  sky130_fd_sc_hd__dfrtp_1 _226_ (
    .CLK(clock),
    .D(_001_[1]),
    .Q(p2[1]),
    .RESET_B(_153_)
  );
  sky130_fd_sc_hd__dfrtp_1 _227_ (
    .CLK(clock),
    .D(_000_[0]),
    .Q(p1[0]),
    .RESET_B(_154_)
  );
  sky130_fd_sc_hd__dfrtp_1 _228_ (
    .CLK(clock),
    .D(_000_[1]),
    .Q(p1[1]),
    .RESET_B(_155_)
  );
  assign _071_ = PLS[8];
  assign _117_ = p9[0];
  assign _080_ = PS[8];
  assign _081_ = illegal_TRIAL;
  assign _008_[0] = _061_;
  assign _118_ = p9[1];
  assign _008_[1] = _062_;
  assign _070_ = PLS[7];
  assign _115_ = p8[0];
  assign _079_ = PS[7];
  assign _007_[0] = _059_;
  assign _116_ = p8[1];
  assign _007_[1] = _060_;
  assign _069_ = PLS[6];
  assign _113_ = p7[0];
  assign _078_ = PS[6];
  assign _006_[0] = _057_;
  assign _114_ = p7[1];
  assign _006_[1] = _058_;
  assign _068_ = PLS[5];
  assign _111_ = p6[0];
  assign _077_ = PS[5];
  assign _005_[0] = _055_;
  assign _112_ = p6[1];
  assign _005_[1] = _056_;
  assign _067_ = PLS[4];
  assign _109_ = p5[0];
  assign _076_ = PS[4];
  assign _004_[0] = _053_;
  assign _110_ = p5[1];
  assign _004_[1] = _054_;
  assign _066_ = PLS[3];
  assign _107_ = p4[0];
  assign _075_ = PS[3];
  assign _003_[0] = _051_;
  assign _108_ = p4[1];
  assign _003_[1] = _052_;
  assign _065_ = PLS[2];
  assign _105_ = p3[0];
  assign _074_ = PS[2];
  assign _002_[0] = _049_;
  assign _106_ = p3[1];
  assign _002_[1] = _050_;
  assign _064_ = PLS[1];
  assign _103_ = p2[0];
  assign _073_ = PS[1];
  assign _001_[0] = _047_;
  assign _104_ = p2[1];
  assign _001_[1] = _048_;
  assign _063_ = PLS[0];
  assign _101_ = p1[0];
  assign _072_ = PS[0];
  assign _000_[0] = _045_;
  assign _102_ = p1[1];
  assign _000_[1] = _046_;
  assign _137_ = reset;
  assign _155_ = _136_;
  assign _138_ = _119_;
  assign _139_ = _120_;
  assign _140_ = _121_;
  assign _141_ = _122_;
  assign _142_ = _123_;
  assign _143_ = _124_;
  assign _144_ = _125_;
  assign _145_ = _126_;
  assign _146_ = _127_;
  assign _147_ = _128_;
  assign _148_ = _129_;
  assign _149_ = _130_;
  assign _150_ = _131_;
  assign _151_ = _132_;
  assign _152_ = _133_;
  assign _153_ = _134_;
  assign _154_ = _135_;
endmodule

module tic_tac_toe_game(clock, reset, play, pc, com_position, player_pos, p1, p2, p3, p4, p5, p6, p7, p8, p9, winner);
  wire [15:0] PLS;
  wire [15:0] PS;
  input clock;
  input [3:0] com_position;
  wire computer_play;
  wire illegal_TRIAL;
  wire no_space;
  output [1:0] p1;
  output [1:0] p2;
  output [1:0] p3;
  output [1:0] p4;
  output [1:0] p5;
  output [1:0] p6;
  output [1:0] p7;
  output [1:0] p8;
  output [1:0] p9;
  input pc;
  input play;
  input [3:0] player_pos;
  wire player_poslay;
  input reset;
  wire win;
  output [1:0] winner;
  illegal_TRIAL_detector imd_MOD (
    .PLS(PLS[8:0]),
    .PS(PS[8:0]),
    .illegal_TRIAL(illegal_TRIAL),
    .p1(p1),
    .p2(p2),
    .p3(p3),
    .p4(p4),
    .p5(p5),
    .p6(p6),
    .p7(p7),
    .p8(p8),
    .p9(p9)
  );
  nospace_detector nsd_MOD (
    .no_space(no_space),
    .p1(p1),
    .p2(p2),
    .p3(p3),
    .p4(p4),
    .p5(p5),
    .p6(p6),
    .p7(p7),
    .p8(p8),
    .p9(p9)
  );
  pition_decoder pd1 (
    .enable(computer_play),
    .in(com_position),
    .out_en(PS)
  );
  pition_decoder pd2 (
    .enable(player_poslay),
    .in(player_pos),
    .out_en(PLS)
  );
  pition_registers pition_reg_unit (
    .PLS(PLS[8:0]),
    .PS(PS[8:0]),
    .clock(clock),
    .illegal_TRIAL(illegal_TRIAL),
    .p1(p1),
    .p2(p2),
    .p3(p3),
    .p4(p4),
    .p5(p5),
    .p6(p6),
    .p7(p7),
    .p8(p8),
    .p9(p9),
    .reset(reset)
  );
  fsm_controller tic_tac_toe_controller (
    .clock(clock),
    .computer_play(computer_play),
    .illegal_TRIAL(illegal_TRIAL),
    .no_space(no_space),
    .pc(pc),
    .play(play),
    .player_poslay(player_poslay),
    .reset(reset),
    .win(win)
  );
  winner_detector win_detect_unit (
    .p1(p1),
    .p2(p2),
    .p3(p3),
    .p4(p4),
    .p5(p5),
    .p6(p6),
    .p7(p7),
    .p8(p8),
    .p9(p9),
    .winner(winner),
    .winnerr(win)
  );
endmodule

module winner_detect_3(p0, p1, p2, winnerr, winner);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  input [1:0] p0;
  input [1:0] p1;
  input [1:0] p2;
  output [1:0] winner;
  output winnerr;
  sky130_fd_sc_hd__clkinv_1 _23_ (
    .A(_15_),
    .Y(_09_)
  );
  sky130_fd_sc_hd__or4b_1 _24_ (
    .A(_15_),
    .B(_17_),
    .C(_19_),
    .D_N(_14_),
    .X(_10_)
  );
  sky130_fd_sc_hd__nand3_1 _25_ (
    .A(_15_),
    .B(_17_),
    .C(_19_),
    .Y(_11_)
  );
  sky130_fd_sc_hd__nand3_1 _26_ (
    .A(_14_),
    .B(_16_),
    .C(_18_),
    .Y(_12_)
  );
  sky130_fd_sc_hd__or3_1 _27_ (
    .A(_14_),
    .B(_16_),
    .C(_18_),
    .X(_13_)
  );
  sky130_fd_sc_hd__a22oi_1 _28_ (
    .A1(_10_),
    .A2(_11_),
    .B1(_12_),
    .B2(_13_),
    .Y(_22_)
  );
  sky130_fd_sc_hd__a221oi_1 _29_ (
    .A1(_10_),
    .A2(_11_),
    .B1(_12_),
    .B2(_13_),
    .C1(_09_),
    .Y(_21_)
  );
  sky130_fd_sc_hd__a21oi_1 _30_ (
    .A1(_10_),
    .A2(_11_),
    .B1(_12_),
    .Y(_20_)
  );
  assign _15_ = p0[1];
  assign _14_ = p0[0];
  assign _17_ = p1[1];
  assign _19_ = p2[1];
  assign _16_ = p1[0];
  assign _18_ = p2[0];
  assign winnerr = _22_;
  assign winner[1] = _21_;
  assign winner[0] = _20_;
endmodule

module winner_detector(p1, p2, p3, p4, p5, p6, p7, p8, p9, winnerr, winner);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  wire _40_;
  wire _41_;
  wire _42_;
  wire _43_;
  wire _44_;
  wire _45_;
  wire _46_;
  wire _47_;
  wire _48_;
  wire _49_;
  wire _50_;
  input [1:0] p1;
  input [1:0] p2;
  input [1:0] p3;
  input [1:0] p4;
  input [1:0] p5;
  input [1:0] p6;
  input [1:0] p7;
  input [1:0] p8;
  input [1:0] p9;
  wire win1;
  wire win2;
  wire win3;
  wire win4;
  wire win5;
  wire win6;
  wire win7;
  wire win8;
  output [1:0] winner;
  wire [1:0] winner1;
  wire [1:0] winner2;
  wire [1:0] winner3;
  wire [1:0] winner4;
  wire [1:0] winner5;
  wire [1:0] winner6;
  wire [1:0] winner7;
  wire [1:0] winner8;
  output winnerr;
  sky130_fd_sc_hd__nor4_1 _51_ (
    .A(_28_),
    .B(_29_),
    .C(_30_),
    .D(_31_),
    .Y(_18_)
  );
  sky130_fd_sc_hd__nor4_1 _52_ (
    .A(_25_),
    .B(_24_),
    .C(_26_),
    .D(_27_),
    .Y(_19_)
  );
  sky130_fd_sc_hd__nand2_1 _53_ (
    .A(_18_),
    .B(_19_),
    .Y(_50_)
  );
  sky130_fd_sc_hd__nor4_1 _54_ (
    .A(_40_),
    .B(_42_),
    .C(_44_),
    .D(_46_),
    .Y(_20_)
  );
  sky130_fd_sc_hd__nor4_1 _55_ (
    .A(_34_),
    .B(_32_),
    .C(_36_),
    .D(_38_),
    .Y(_21_)
  );
  sky130_fd_sc_hd__nand2_1 _56_ (
    .A(_20_),
    .B(_21_),
    .Y(_48_)
  );
  sky130_fd_sc_hd__nor4_1 _57_ (
    .A(_41_),
    .B(_43_),
    .C(_45_),
    .D(_47_),
    .Y(_22_)
  );
  sky130_fd_sc_hd__nor4_1 _58_ (
    .A(_35_),
    .B(_33_),
    .C(_37_),
    .D(_39_),
    .Y(_23_)
  );
  sky130_fd_sc_hd__nand2_1 _59_ (
    .A(_22_),
    .B(_23_),
    .Y(_49_)
  );
  winner_detect_3 u1 (
    .p0(p1),
    .p1(p2),
    .p2(p3),
    .winner(winner1),
    .winnerr(win1)
  );
  winner_detect_3 u2 (
    .p0(p4),
    .p1(p5),
    .p2(p6),
    .winner(winner2),
    .winnerr(win2)
  );
  winner_detect_3 u3 (
    .p0(p7),
    .p1(p8),
    .p2(p9),
    .winner(winner3),
    .winnerr(win3)
  );
  winner_detect_3 u4 (
    .p0(p1),
    .p1(p4),
    .p2(p7),
    .winner(winner4),
    .winnerr(win4)
  );
  winner_detect_3 u5 (
    .p0(p2),
    .p1(p5),
    .p2(p8),
    .winner(winner5),
    .winnerr(win5)
  );
  winner_detect_3 u6 (
    .p0(p3),
    .p1(p6),
    .p2(p9),
    .winner(winner6),
    .winnerr(win6)
  );
  winner_detect_3 u7 (
    .p0(p1),
    .p1(p5),
    .p2(p9),
    .winner(winner7),
    .winnerr(win7)
  );
  winner_detect_3 u8 (
    .p0(p3),
    .p1(p5),
    .p2(p6),
    .winner(winner8),
    .winnerr(win8)
  );
  assign _25_ = win2;
  assign _24_ = win1;
  assign _26_ = win3;
  assign _27_ = win4;
  assign _28_ = win5;
  assign _29_ = win6;
  assign _30_ = win7;
  assign _31_ = win8;
  assign winnerr = _50_;
  assign _34_ = winner2[0];
  assign _32_ = winner1[0];
  assign _36_ = winner3[0];
  assign _38_ = winner4[0];
  assign _40_ = winner5[0];
  assign _42_ = winner6[0];
  assign _44_ = winner7[0];
  assign _46_ = winner8[0];
  assign winner[0] = _48_;
  assign _35_ = winner2[1];
  assign _33_ = winner1[1];
  assign _37_ = winner3[1];
  assign _39_ = winner4[1];
  assign _41_ = winner5[1];
  assign _43_ = winner6[1];
  assign _45_ = winner7[1];
  assign _47_ = winner8[1];
  assign winner[1] = _49_;
endmodule
